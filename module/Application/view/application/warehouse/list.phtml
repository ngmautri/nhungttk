<?php
use Application\Application\Service\AccountChart\Export\ExportAsHtmlTable;

/**
 *
 * @author Nguyen Mau Tri - ngmautri@gmail.com
 *
 */
?>
<div id="tabs" style="font-size: 9.5pt">
   <ul>
      <li>
         <a href="#general"><?php

        echo $this->translate('Warehouse');
        ?>


      </li>
   </ul>
   <div id="general">
      <a class="btn btn-default btn-sm" href="<?php

    echo $this->baseUrl?>/application/warehouse/create">
         <small>
            <i class="glyphicon glyphicon-plus"> </i>
         </small>&nbsp;<?php

        echo $this->translate('Create New');
        ?></a>
      <hr>
      <div id="html" class="demo">
<?php
$export = new ExportAsHtmlTable();
// echo $export->execute($chart);
?>
			<ul>
         </ul>
      </div>

   <div id="gird_div" style="margin: 1px; font-size: 9pt"></div>
   </div>
</div>



<script>

var columns= [
    { title: "Wh Code", dataType: "string", dataIndx: "whCode", align: 'left',minWidth: 100,editable: false},
    { title: "Wh Name", dataType: "string", dataIndx: "whName", align: 'left',minWidth: 150,editable: false},
    { title: "Wh Name", dataType: "string", dataIndx: "whAddress", align: 'left',minWidth: 500,editable: false},
    { title: "Action", editable: false, minWidth: 150, sortable: false,
        render: function (ui) {
         return '<button type="button" class="show_btn">Show </button> <button type="button" class="edit_btn">Edit </button>';
        }
    },

];


var dataModel = {
    dataType: "JSON",
    location: "remote",
    method: "GET",
    recIndx: "id",
    url: "/application/warehouse/gird",
    getData: function (response) {
       return { data: response.data, curPage: response.curPage, totalRecords: response.totalRecords};
   },
};

var obj = {
   title: "<strong>Warehouse</strong>",
   dataModel: dataModel,
   colModel: columns,
   height: $(window).height()-300,
   width: '90%',
   hoverMode: 'row',
   showTop: true,
   collapsible: true,
   showHeader: true,
   showBottom: true,
   editable: true,
   wrap: false,
   columnBorders: true,
   numberCell: {show:true, resizable: true, width: 40, title: "#", minWidth: 25 },
   pageModel: { type: "remote", rPP:100, strRpp: "{0}" },
   editor: {
       select: true
   },
};

var $grid = $("#gird_div").pqGrid(obj);

$grid.on('pqgridrefresh pqgridrefreshrow', function () {
    //debugger;
    var $grid = $(this);

    $grid.find("button.show_btn").button({})
    .unbind("click")
    .bind("click", function (evt) {
        var $tr = $(this).closest("tr"),
        rowIndx = $grid.pqGrid("getRowIndx", { $tr: $tr }).rowIndx;
        rowData = $grid.pqGrid("getRowData", { rowIndx: rowIndx }),
        recIndx = $grid.pqGrid("option", "dataModel.recIndx");
        redirectUrl="/application/warehouse/view?id="+rowData['id'],
        window.location.href = redirectUrl;
    });

    $grid.find("button.edit_btn").button({})
    .unbind("click")
    .bind("click", function (evt) {
        var $tr = $(this).closest("tr"),
        rowIndx = $grid.pqGrid("getRowIndx", { $tr: $tr }).rowIndx;
        rowData = $grid.pqGrid("getRowData", { rowIndx: rowIndx }),
        recIndx = $grid.pqGrid("option", "dataModel.recIndx");
        redirectUrl="/application/warehouse/update?id="+rowData['id'],
        window.location.href = redirectUrl;
    });

 });

// important for datamodel: local.
$( "#pr_row_gird" ).pqGrid( "refreshDataAndView" );

function refreshGird(){
  $( "#pr_row_gird" ).pqGrid( "refreshDataAndView" )
}


</script>
