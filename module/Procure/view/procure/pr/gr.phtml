
<h4><?php echo (!$entity == null)? $entity->getPrName():"";?></h4>

<div id="tabs" style="font-size: 9.5pt">
	<ul>
		<li><a href="#general">Purchase Request</a></li>
		<li><a
			href="/procure/pr-attachment/get-pictures?token=<?php echo (!$entity == null)? $entity->getToken():"";?>&checksum=<?php echo (!$entity == null)? $entity->getChecksum():"";?>&target_id=<?php echo (!$entity == null)? $entity->getID():"";?>">Picture</a></li>
		<li><a
			href="/procure/pr-attachment/list1?token=<?php echo (!$entity == null)? $entity->getToken():"";?>&checksum=<?php echo (!$entity == null)? $entity->getChecksum():"";?>&target_id=<?php echo (!$entity == null)? $entity->getID():"";?>">Attachment</a></li>

	</ul>

	<div id="general">

		<form id="Create_PR_Form" class="form-horizontal"
			action="/procure/pr/add" method="post" enctype="multipart/form-data">
			<input type="hidden" name="redirectUrl"
				value="<?php echo $redirectUrl ?>" />


			<fieldset>
				<legend style="font-size: 10pt; color: gray;">
					<small><span class="glyphicon glyphicon-triangle-right"></span></small>&nbsp;
					<a href="#pr_header" class="" data-toggle="collapse">PR HEADER:</a>
				</legend>
				<div id="pr_header" class="collapse">

					<div class="form-group">
						<label class="control-label col-sm-2">PR Number:</label>
						<div class="col-sm-3">
							<input class="form-control" type="text" placeholder=""
								name="prNumber"
								value="<?php echo (!$entity == null)? $entity->getPrNumber():"";?>">
						</div>

						<label class="control-label col-sm-1" for="inputTag"></label>
						<div class="col-sm-4">
							<input
								<?php if(!$entity == null): echo ($entity->getIsActive()=="1")?"checked":""; else: echo "checked"; endif;?>
								type="checkbox" name="isActive" value="1">&nbsp;Active&nbsp;&nbsp;
							<input
								<?php if(!$entity == null): echo ($entity->getIsDraft()== "1")?"checked":""; else: echo "checked"; endif;?>
								type="checkbox" name="isDraft" value="1">&nbsp;Draft&nbsp;&nbsp;

						</div>

					</div>

					<div class="form-group">
						<label class="control-label col-sm-2">PR Name:</label>
						<div class="col-sm-3">
							<input class="form-control" type="text" placeholder=""
								id="prName" name="prName"
								value="<?php echo (!$entity == null)? $entity->getPrName():"";?>">
						</div>

						<label class="control-label col-sm-2">Keywords:</label>
						<div class="col-sm-3">
							<input class="form-control" type="text" placeholder=""
								id="keywords" name="keywords"
								value="<?php echo (!$entity == null)? $entity->getKeywords():"";?>">
						</div>
					</div>

					<div class="form-group">
						<label class="control-label col-sm-2">Department</label>
						<div class="col-sm-3">
							<input disabled class="form-control" type="text"
								id="department_name" placeholder="Please select!"
								name="deparment_name"
								value="<?php if (!$entity== null):if($entity->getDepartment()!==null):echo $entity->getDepartment()->getNodeName(); endif;endif;?>">

							<input type="hidden" class="form-control" type="text"
								id="department_name_selected" placeholder="Please select!"
								name="department_id"
								value="<?php if (!$entity== null):if($entity->getDepartment()!==null):echo $entity->getDepartment()->getNodeId(); endif;endif;?>">
						</div>

						<a style="color: #0080ff;" href="javascript:;"
							onclick="showBootstrapDialog('Select Deparment','/application/department/list1','b_loaded_data');">Select&nbsp;&nbsp;<i
							class="glyphicon glyphicon-folder-open"></i>
						</a>
					</div>

					<div class="form-group">
						<label class="control-label col-sm-2">Remarks:</label>
						<div class="col-sm-3">
							<textarea class="form-control" type="text" rows="4"
								placeholder="" name="remarks" style="font-size: 9pt;"><?php echo (!$entity == null)? $entity->getRemarks():"";?></textarea>
						</div>
					</div>

					<div class="form-group">
						<label class="control-label col-sm-2" for="inputTag"></label>
						<div class="col-sm-3">
							<a class="btn btn-default"
								href="<?php echo $this->baseUrl ?>/procure/pr/edit?token=<?php echo (!$entity == null)? $entity->getToken():"";?>&entity_id=<?php echo (!$entity == null)? $entity->getId():"";?>&checksum=<?php echo (!$entity == null)? $entity->getChecksum():"";?>"><small><i
									class="glyphicon glyphicon-pencil"></i></small>&nbsp;Edit</a>

						</div>
					</div>

				</div>
			</fieldset>
		</form>
		
		
		<fieldset>
			<legend style="font-size: 10pt; color: gray;">
				<small><span class="glyphicon glyphicon-triangle-right"></span></small>&nbsp;
				<a href="#transaction" class="" data-toggle="collapse">PR ROWS:</a>
			</legend>
			<div id="transaction" class="collapse in">

				<div id="pr_rows"></div>
				<div id="pr_row_gird" style="margin: 1px;"></div>
		</fieldset>
		
		
		
	</div>


</div>



<script>

	//loadPrRow('<?php echo $this->baseUrl . '/procure/pr-row/row?target_id='. $entity->getId().'&token='.$entity->getToken().'&checksum='.$entity->getChecksum()?>');
	$("#Create_PR_Form :input").attr("disabled", "disabled");


	 //to check whether any row is currently being edited.
    function isEditing($grid) {
        var rows = $grid.pqGrid("getRowsByClass", { cls: 'pq-row-edit' });
        if (rows.length > 0) {
            //focus on editor if any 
            $grid.find(".pq-editor-focus").focus();
            return true;
        }
        return false;
    }

    //called by edit button.
    function editRow(rowIndx, $grid) {

        $grid.pqGrid("addClass", { rowIndx: rowIndx, cls: 'pq-row-edit' });
        $grid.pqGrid("editFirstCellInRow", { rowIndx: rowIndx });

        //change edit button to update button and delete to cancel.
        var $tr = $grid.pqGrid("getRow", { rowIndx: rowIndx }),
            $btn = $tr.find("button.receive_btn");
        $btn.button("option", { label: "Update", "icons": { primary: "ui-icon-check"} })
            .unbind("click")
            .click(function (evt) {
                evt.preventDefault();
                return update(rowIndx, $grid);
            });
        $btn.next().button("option", { label: "Cancel", "icons": { primary: "ui-icon-cancel"} })
            .unbind("click")
            .click(function (evt) {
                $grid.pqGrid("quitEditMode");
                $grid.pqGrid("removeClass", { rowIndx: rowIndx, cls: 'pq-row-edit' });
                $grid.pqGrid("refreshRow", { rowIndx: rowIndx });
                $grid.pqGrid("rollback");
            });
    }
    //called by update button.
    function update(rowIndx, $grid) {

        if ($grid.pqGrid("saveEditCell") == false) {
            return false;
        }

        var isValid = $grid.pqGrid("isValid", { rowIndx: rowIndx }).valid;
        if (!isValid) {
            return false;
        }
        var isDirty = $grid.pqGrid("isDirty");
        if (isDirty) {
            var url,
                rowData = $grid.pqGrid("getRowData", { rowIndx: rowIndx }),
                recIndx = $grid.pqGrid("option", "dataModel.recIndx");

            $grid.pqGrid("removeClass", { rowIndx: rowIndx, cls: 'pq-row-edit' });

            if (rowData[recIndx] == null) {
                //url to add records.
                url = "/pro/products/add";
                //url = "/pro/products.php?pq_add=1";for PHP
            }
            else {
                //url to  update records.
                url = "/pro/products/update";
                //url = "/pro/products.php?pq_update=1";for PHP

               
            }
            $.ajax($.extend({}, ajaxObj, {
                context: $grid,
                url: url,
                data: rowData,
                success: function (response) {
                    var recIndx = this.pqGrid("option", "dataModel.recIndx");
                    if (rowData[recIndx] == null) {
                        rowData[recIndx] = response.recId;
                    }
                    this.pqGrid("removeClass", { rowIndx: rowIndx, cls: 'pq-row-edit' });
                    this.pqGrid("commit");
                }
            }));
        }
        else {
            $grid.pqGrid("quitEditMode");
            $grid.pqGrid("removeClass", { rowIndx: rowIndx, cls: 'pq-row-edit' });
            $grid.pqGrid("refreshRow", { rowIndx: rowIndx });
        }
    }
     
	  //called by add button in toolbar.
    function addRow($grid) {
    	 if (isEditing($grid)) {
    	        return false;
    	    }
    	  
    	//append empty row in the first row.                            
        var rowData = { Item: "", Quantity: 0, Received: 0, Balance: 0}; //empty row template
        $grid.pqGrid("addRow", { rowIndxPage: 0, rowData: rowData });

        var $tr = $grid.pqGrid("getRow", { rowIndxPage: 0 });
        if ($tr) {
            //simulate click on edit button.
            $tr.find("button.edit_btn").click();
        }
    }
    var autoCompleteEditor = function (ui) {
        var $inp = ui.$cell.find("input");
        var rowData = ui.rowData;
      
        //initialize the editor
        $inp.autocomplete({
        	source: "/bp/vendor-search/auto-complete",
            minLength: 3,
            select: function( event, ui ) {
          	  //$( "#vendor_id" ).val(ui.item.id);
              //alert	( "Selected: " + ui.item.value + " aka " + ui.item.id );
          	  //alert($( "#vendor_id" ).val());
          	  //alert(ui.item.id);
          	  rowData.vendor_id = ui.item.id;

          	 	$('#global-notice').show();
          		$('#global-notice').html('"' + ui.item.value + '" selected');
          		$('#global-notice').fadeOut(5000);
          		//$("#jquery_dialog").dialog("close");
            }
            })
            .autocomplete( "instance" )._renderItem = function( ul, item ) {
            return $( "<li>" )
              .append( "<div style='padding-bottom: 5px; border-bottom: thin solid gray;'>" + item.value + "<br><span style='color:gray;font-size: 9pt;'>" + item.vendor_country + "<span></div>" )
              .appendTo( ul );
          };
    }

    var dateEditor = function (ui) {
        var $inp = ui.$cell.find("input"),
            $grid = $(this),
            validate = function (that) {
                var valid = $grid.pqGrid("isValid", { dataIndx: ui.dataIndx, value: $inp.val() }).valid;
                if (!valid) {
                    that.firstOpen = false;
                }
            };

        //initialize the editor
        $inp
        .on("input", function (evt) {
            validate(this);
        })
        .datepicker({
        	dateFormat: 'yy-mm-dd',closeText: 'X',
        	changeMonth: true,
            changeYear: true,
            showAnim: '',
            onSelect: function () {
                this.firstOpen = true;
                validate(this);
            },
            beforeShow: function (input, inst) {
                return !this.firstOpen;
            },
            onClose: function () {
                this.focus();
            }
        });
    }
    

    //var container_height = $('#main_container').height();
    //alert(container_height);
	var obj = { width: "100%", height: $(window).height()-350, showTitle : false,
			resizable:true,
			//draggable:true,
			sortable: true,
			hoverMode: 'cell',
			freezeCols:4,
		      track: true, //to turn on the track changes.
		      

			 //make rows editable selectively.
            editable: function (ui) {
                var $grid = $(this);
                var rowIndx = ui.rowIndx;
                if ($grid.pqGrid("hasClass", { rowIndx: rowIndx, cls: 'pq-row-edit' }) == true) {
                    return true;
                }
                else {
                    return false;
                }
            },
			
			 pageModel: { type: "remote", rPP: 50, strRpp: "{0}" },
			 columnBorders: true,
			   toolbar: {
	                items: [
	                    { type: 'button', icon: 'ui-icon-plus', label: 'Add New Row', listeners: [
	                        { "click": function (evt, ui) {
	                            var $grid = $(this).closest('.pq-grid');
	                            //addRow($grid);
	                            
	    redirectUrl="/procure/pr-row/add?token=<?php echo (!$entity == null)? $entity->getToken():"";?>&target_id=<?php echo (!$entity == null)? $entity->getId():"";?>&checksum=<?php echo (!$entity == null)? $entity->getChecksum():"";?>";
       	//alert(rowData['item_name']);

          	//window.open(redirectUrl,'_blank');
	        window.location.href= redirectUrl;
	                             
	                            //debugger;
	                        }
	                        }
	                    ]
	                    }
	                ]
	            }, 


	             
	};

    obj.colModel = [
    	{ title: "SKU", dataType: "string", dataIndx: "item_sku", width:50,editable: false },
        { title: "Item", dataType: "string", dataIndx: "item_name", width:100,editable: false },
        { title: "Order Q'ty", dataType: "integer", dataIndx: "quantity", width: 50,align: 'right',editable: false},
        { title: "Receipted Q'ty", dataType: "string", dataIndx: "total_received", width:70, align: 'right',editable: false},
        { title: "Receipt Date", dataIndx: "receipt_date", width:80,editable: true,
      		editor: {
        	type: 'textbox',
       		 init: dateEditor
    		}, 

            render: function (ui) {
                //return "hello";
                var cellData = ui.cellData;
                if (cellData) {
                    return $.datepicker.formatDate('yy-mm-dd', new Date(cellData));
                }
                else {
                    return "";
                }
            },
            validations: [
               { type: 'regexp', value: '^[0-9]{4}-[0-9]{2}-[0-9]{2}$', msg: 'Not in mm/dd/yyyy format' }
            ] 
    	}, 
    	{ title: "vendor", dataType: "string", dataIndx: "vendor_name", align: 'left',minWidth: 100,editable: true,
             editor: {
             type: "textbox",
             init: autoCompleteEditor
             //type: function (ui) { return dropdowneditor(this, ui); }
         	},
         },
         
        { title: "Vendor_id", dataType: "integer", dataIndx: "vendor_id", width: 7	,editable: true,hidden: true },
        { title: "Quantity", dataType: "integer", dataIndx: "receipt_quantity", width: 70,align: 'right',editable: true},
        { title: "Unit", dataType: "String", dataIndx: "unit", width: 70,align: 'right',editable: true},
        { title: "Convert Factor", dataType: "integer", dataIndx: "convert_factory", width: 70,align: 'right',editable: true},
        { title: "Price", dataType: "float", dataIndx: "unit_price", width: 82, align: 'right',editable: true},
        { title: "Curr", dataType: "string", dataIndx: "currency", width:3, align: 'center',editable: true},
        { title: "Curr_id", dataType: "integer", dataIndx: "", width: 7	,editable: true,hidden: true },
        
        { title: "Remarks", dataType: "string", dataIndx: "remarks", align: 'left',minWidth: 150,editable: true},
        
        { title: "", editable: false, minWidth: 200, sortable: false,
            render: function (ui) {
                return "<button type='button' class='receive_btn'><span class='glyphicon glyphicon-plus'>&nbsp;</span><button type='button' class='receive_inline_btn'><span class='glyphicon glyphicon-plus'>&nbsp;PO</span></button>";
	           }
        },

        
   ];

    obj.dataModel = {
    		  dataType: "JSON",
              location: "remote",
              method: "GET",
              recIndx: "row_id",
              url: "/procure/pr-row/gr-gird?token=<?php echo (!$entity == null)? $entity->getToken():"";?>&target_id=<?php echo (!$entity == null)? $entity->getId():"";?>&checksum=<?php echo (!$entity == null)? $entity->getChecksum():"";?>",
              getData: function (response) {
           	    return { data: response.data, curPage: response.curPage, totalRecords: response.totalRecords};
             }
    };
    
    var $grid = $("#pr_row_gird").pqGrid(obj);

    $grid.on('pqgridrefresh pqgridrefreshrow', function () {
        //debugger;
        var $grid = $(this);

        //receive button
        $grid.find("button.receive_btn").button({})
        .unbind("click")
        .bind("click", function (evt) {

            var $tr = $(this).closest("tr"),
            rowIndx = $grid.pqGrid("getRowIndx", { $tr: $tr }).rowIndx;

            rowData = $grid.pqGrid("getRowData", { rowIndx: rowIndx }),
            recIndx = $grid.pqGrid("option", "dataModel.recIndx");
    
            redirectUrl="/inventory/item-transaction/gr?token="+rowData['row_token']+"&pr_row_id="+rowData['row_id']+"&checksum="+rowData['row_checksum'];
          	//alert(rowData['item_name']);
			
			window.location.href = redirectUrl;
          	//window.open(redirectUrl,'_blank');
        });

        //receive button
        $grid.find("button.edit_btn").button({})
        .unbind("click")
        .bind("click", function (evt) {

            var $tr = $(this).closest("tr"),
            rowIndx = $grid.pqGrid("getRowIndx", { $tr: $tr }).rowIndx;

            rowData = $grid.pqGrid("getRowData", { rowIndx: rowIndx }),
            recIndx = $grid.pqGrid("option", "dataModel.recIndx");
    
            redirectUrl="/procure/pr-row/edit?token="+rowData['row_token']+"&entity_id="+rowData['row_id']+"&checksum="+rowData['row_checksum'];
          	//alert(redirectUrl);
			window.location.href = redirectUrl;
          	//window.open(redirectUrl,'_blank');
        });

        //receive button
        $grid.find("button.receive_inline_btn").button({})
        .unbind("click")
        .bind("click", function (evt) {
            if (isEditing($grid)) {
                return false;
            }
            var $tr = $(this).closest("tr"),
                rowIndx = $grid.pqGrid("getRowIndx", { $tr: $tr }).rowIndx;
            editRow(rowIndx, $grid);
            return false;
        });

      //rows which were in edit mode before refresh, put them in edit mode again.
        var rows = $grid.pqGrid("getRowsByClass", { cls: 'pq-row-edit' });
        if (rows.length > 0) {
            var rowIndx = rows[0].rowIndx;
            editRow(rowIndx, $grid);
        }
    });        

</script>

