<?php   /**@var \Application\Entity\NmtProcurePr $entity ;*/ ?>

<div>
	<h4><?php echo (!$entity == null)?$entity->getPrNumber():"";?>
<span style="color: gray; font-size: 10pt"><?php echo (!$entity == null)? " // PR #" . $entity->getPrAutoNumber() :"";?></span>
	</h4>
</div>



<!-- 
<img class= "img-rounded" width="100" height="100" src="/procure/pr/get-pqcode-png?id=<?php  echo $entity->getId();?>&token=<?php  echo $entity->getToken();?>"/>
 -->

<div id="tabs" style="font-size: 9.5pt">
	<ul>
		<li><a href="#general"><i class="glyphicon glyphicon-shopping-cart"></i>&nbsp;Purchase
				Request</a></li>
		<li><a
			href="/procure/pr-attachment/get-pictures?token=<?php echo (!$entity == null)? $entity->getToken():"";?>&checksum=<?php echo (!$entity == null)? $entity->getChecksum():"";?>&target_id=<?php echo (!$entity == null)? $entity->getID():"";?>"><small></small><span
				class="glyphicon glyphicon-picture"></span>&nbsp;Picture</a></li>
		<li><a
			href="/procure/pr-attachment/list1?token=<?php echo (!$entity == null)? $entity->getToken():"";?>&checksum=<?php echo (!$entity == null)? $entity->getChecksum():"";?>&target_id=<?php echo (!$entity == null)? $entity->getID():"";?>">
				<small><span class="glyphicon glyphicon-paperclip"></span></small>&nbsp;Attachment
		</a></li>
		<li><a
			href="<?php echo $this->baseUrl ?>/procure/change-log/list1?object_token=<?php echo (!$entity == null)? $entity->getToken():"";?>&object_id=<?php echo (!$entity == null)? $entity->getId():"";?>&class_name=<?php echo (!$entity == null)? get_class($entity):"";?>"><span
				class="glyphicon glyphicon-list"></span>&nbsp;Log</a></li>
	</ul>

	<div id="general" style="font-size: 9pt">

		<div style="position: relative; float: right;">

			<a class="btn btn-default btn-sm" href="javascript:;"
				onclick="refreshGird();"><i class="fa fa-refresh" aria-hidden="true"></i>&nbsp;&nbsp;Refresh</a>
		<a class="btn btn-default btn-sm"
				href="<?php echo $this->baseUrl ?>/procure/pr/edit?token=<?php echo (!$entity == null)? $entity->getToken():"";?>&entity_id=<?php echo (!$entity == null)? $entity->getId():"";?>&checksum=<?php echo (!$entity == null)? $entity->getChecksum():"";?>"><small><i
					class="glyphicon glyphicon-pencil"></i></small>&nbsp;Edit</a> <a
				class="btn btn-default btn-sm"
				href="<?php echo $this->baseUrl ?>/procure/pr-attachment/upload-pictures?token=<?php echo (!$entity== null)? $entity->getToken():"";?>&checksum=<?php echo (!$entity== null)? $entity->getChecksum():"";?>&target_id=<?php echo (!$entity== null)? $entity->getID():"";?>"><small><i
					class="fa fa-upload" aria-hidden="true"></i></small>&nbsp;Upload
				picture</a> <a class="btn btn-default btn-sm"
				href="<?php echo $this->baseUrl ?>/procure/pr-row/download?token=<?php echo (!$entity == null)? $entity->getToken():"";?>&target_id=<?php echo (!$entity == null)? $entity->getId():"";?>">
				<i class="fa fa-file-excel-o" aria-hidden="true"></i> &nbsp;Excel
			</a> <a target="_blank" class="btn btn-default btn-sm"
				href="<?php echo $this->baseUrl ?>/procure/pr/print-pdf?token=<?php echo (!$entity == null)? $entity->getToken():"";?>&target_id=<?php echo (!$entity == null)? $entity->getId():"";?>">
				<i class="fa fa-file-pdf-o" aria-hidden="true"></i> &nbsp;PDF
			</a> <a class="btn btn-default btn-sm"
				href="<?php echo $this->baseUrl ?>/procure/pr/submit?token=<?php echo (!$entity == null)? $entity->getToken():"";?>&entity_id=<?php echo (!$entity == null)? $entity->getId():"";?>">
				<i class="fa fa-paper-plane-o" aria-hidden="true"></i> &nbsp;Submit
			</a> <a class="btn btn-default btn-sm" href="javascript:;"
				onclick="showJqueryDialog('<?php echo $entity->getPrAutoNumber().' - '. $entity->getPrNumber() ; ?>','1550',$(window).height()-50,'/procure/pr/show1?token=<?php echo $entity->getToken() ?>&entity_id=<?php echo $entity->getId() ?>&checksum=<?php echo $entity->getChecksum() ?>','j_loaded_data',true);"><i
				class="fa fa-window-maximize" aria-hidden="true"></i> Full Screen</a>
	</div>
	<hr>
		<form id="Create_PR_Form" class="form-horizontal"
			action="" method="post" enctype="multipart/form-data">
			<input type="hidden" name="redirectUrl"
				value="<?php echo $redirectUrl; ?>" />


			<fieldset>
				<legend style="font-size: 9pt; color: gray;">
					<small><span class="glyphicon glyphicon-triangle-right"></span></small>&nbsp;
					<a style="font-size: 9pt; color: gray;" href="#pr_header" class="" data-toggle="collapse">PR HEADER: <?php echo (!$entity == null)? "(". $entity->getPrName() .")" :"";?></a>
				</legend>
				<div id="pr_header" class="collapse">

					<div class="form-group margin-bottom required">
						<label class="control-label col-sm-2"><?php echo $this->translate('PR#'); ?>:</label>
						<div class="col-sm-3">
							<input disabled class="form-control input-sm" type="text"
								value="<?php if(!$entity == null): echo $entity->getPrAutoNumber(); endif;?>" />
						</div>
						<div class="col-sm-4">
					  	</div>
					</div>

					<div class="form-group margin-bottom">
						<label class="control-label col-sm-2">PR Number:</label>
						<div class="col-sm-3">
							<input class="form-control input-sm" type="text" placeholder=""
								name="prNumber"
								value="<?php echo (!$entity == null)? $entity->getPrNumber():"";?>">
						</div>
						<div class="col-sm-4">
							<input
								<?php if(!$entity == null): echo ($entity->getIsActive()=="1")?"checked":""; else: echo "checked"; endif;?>
								type="checkbox" name="isActive" value="1">&nbsp;Active&nbsp;&nbsp;
							<input
								<?php if(!$entity == null): echo ($entity->getIsDraft()== "1")?"checked":""; else: echo "checked"; endif;?>
								type="checkbox" name="isDraft" value="1">&nbsp;Draft&nbsp;&nbsp;

						</div>
					</div>

					<div class="form-group margin-bottom">
						<label class="control-label col-sm-2">PR Name:</label>
						<div class="col-sm-3">
							<input class="form-control input-sm" type="text" placeholder=""
								id="prName" name="prName"
								value="<?php echo (!$entity == null)? $entity->getPrName():"";?>">
						</div>

						<label class="control-label col-sm-2">Keywords:</label>
						<div class="col-sm-3">
							<input class="form-control input-sm" type="text" placeholder=""
								id="keywords" name="keywords"
								value="<?php echo (!$entity == null)? $entity->getKeywords():"";?>">
						</div>
					</div>

					<div class="form-group margin-bottom">
						<label class="control-label col-sm-2">Date:</label>
						<div class="col-sm-3">
							<input class="form-control input-sm" type="text" id="submittedOn"
								name="submittedOn"
								value="<?php if(!$entity == null): if ($entity->getSubmittedOn() !== null): echo date_format($entity->getSubmittedOn(),"Y-m-d"); endif; endif;?>"
								placeholder=" lease select" />
						</div>
					</div>

					<div class="form-group margin-bottom">
						<label class="control-label col-sm-2">Total Rows:</label>
						<div class="col-sm-3">
							<input class="form-control input-sm" type="text" placeholder=""
								id="totalRowManual" name="totalRowManual"
								value="<?php echo (!$entity == null)? $entity->getTotalRowManual():"";?>">
						</div>

					</div>

					<div class="form-group margin-bottom">
						<label class="control-label col-sm-2">Department</label>
						<div class="col-sm-3">
							<input disabled class="form-control input-sm" type="text"
								id="department_name" placeholder="Please select!"
								name="deparment_name"
								value="<?php if (!$entity== null):if($entity->getDepartment()!==null):echo $entity->getDepartment()->getNodeName(); endif;endif;?>">

							<input type="hidden" class="form-control input-sm"
								id="department_name_selected" placeholder="Please select!"
								name="department_id"
								value="<?php if (!$entity== null):if($entity->getDepartment()!==null):echo $entity->getDepartment()->getNodeId(); endif;endif;?>">
						</div>

						<a style="color: #0080ff;" href="javascript:;"
							onclick="showBootstrapDialog('Select Deparment','/application/department/list1','b_loaded_data');">Select&nbsp;&nbsp;<i
							class="glyphicon glyphicon-folder-open"></i>
						</a>
					</div>

					<div class="form-group margin-bottom">
						<label class="control-label col-sm-2">Remarks:</label>
						<div class="col-sm-8">
							<input class="form-control input-sm" type="text" placeholder=""
								name="itemDescription"
								value="<?php echo (!$entity == null)? $entity->getRemarks():"";?>">
						</div>
					</div>
			</div>
			</fieldset>
		</form>


		<fieldset>
			<legend style="font-size: 8pt; color: gray;">
				<small><span class="glyphicon glyphicon-triangle-right"></span></small>&nbsp;
				<a style="font-size: 9pt; color: gray;" href="#transaction" class="" data-toggle="collapse">PR ROWS:</a>
			</legend>
			<div id="transaction" class="collapse in">
				<div id="pr_rows"></div>
				<div id="pr_row_gird" style="margin: 1px;"></div>
			</div>
		</fieldset>
	</div>
</div>



<script>

	//loadPrRow('<?php echo $this->baseUrl . '/procure/pr-row/row?target_id='. $entity->getId().'&token='.$entity->getToken().'&checksum='.$entity->getChecksum()?>');
	$("#Create_PR_Form :input").attr("disabled", "disabled");


	 //to check whether any row is currently being edited.
    function isEditing($grid) {
        var rows = $grid.pqGrid("getRowsByClass", { cls: 'pq-row-edit' });
        if (rows.length > 0) {
            //focus on editor if any 
            $grid.find(".pq-editor-focus").focus();
            return true;
        }
        return false;
    }

    //called by edit button.
    function editRow(rowIndx, $grid) {

        $grid.pqGrid("addClass", { rowIndx: rowIndx, cls: 'pq-row-edit' });
        $grid.pqGrid("editFirstCellInRow", { rowIndx: rowIndx });

        //change edit button to update button and delete to cancel.
        var $tr = $grid.pqGrid("getRow", { rowIndx: rowIndx }),
            $btn = $tr.find("button.edit_btn");
        $btn.button("option", { label: "Update", "icons": { primary: "ui-icon-check"} })
            .unbind("click")
            .click(function (evt) {
                evt.preventDefault();
                return update(rowIndx, $grid);
            });
        $btn.next().button("option", { label: "Cancel", "icons": { primary: "ui-icon-cancel"} })
            .unbind("click")
            .click(function (evt) {
                $grid.pqGrid("quitEditMode");
                $grid.pqGrid("removeClass", { rowIndx: rowIndx, cls: 'pq-row-edit' });
                $grid.pqGrid("refreshRow", { rowIndx: rowIndx });
                $grid.pqGrid("rollback");
            });
    }
    //called by update button.
    function update(rowIndx, $grid) {

        if ($grid.pqGrid("saveEditCell") == false) {
            return false;
        }

        var isValid = $grid.pqGrid("isValid", { rowIndx: rowIndx }).valid;
        if (!isValid) {
            return false;
        }
        var isDirty = $grid.pqGrid("isDirty");
        if (isDirty) {
            var url,
                rowData = $grid.pqGrid("getRowData", { rowIndx: rowIndx }),
                recIndx = $grid.pqGrid("option", "dataModel.recIndx");

            $grid.pqGrid("removeClass", { rowIndx: rowIndx, cls: 'pq-row-edit' });

            if (rowData[recIndx] == null) {
                //url to add records.
                url = "/pro/products/add";
                //url = "/pro/products.php?pq_add=1";for PHP
            }
            else {
                //url to  update records.
                url = "/pro/products/update";
                //url = "/pro/products.php?pq_update=1";for PHP
            }
            $.ajax($.extend({}, ajaxObj, {
                context: $grid,
                url: url,
                data: rowData,
                success: function (response) {
                    var recIndx = this.pqGrid("option", "dataModel.recIndx");
                    if (rowData[recIndx] == null) {
                        rowData[recIndx] = response.recId;
                    }
                    this.pqGrid("removeClass", { rowIndx: rowIndx, cls: 'pq-row-edit' });
                    this.pqGrid("commit");
                }
            }));
        }
        else {
            $grid.pqGrid("quitEditMode");
            $grid.pqGrid("removeClass", { rowIndx: rowIndx, cls: 'pq-row-edit' });
            $grid.pqGrid("refreshRow", { rowIndx: rowIndx });
        }
    }
     
	  //called by add button in toolbar.
    function addRow($grid) {
    	 if (isEditing($grid)) {
    	        return false;
    	    }
    	  
    	//append empty row in the first row.                            
        var rowData = { Item: "", Quantity: 0, Received: 0, Balance: 0}; //empty row template
        $grid.pqGrid("addRow", { rowIndxPage: 0, rowData: rowData });

        var $tr = $grid.pqGrid("getRow", { rowIndxPage: 0 });
        if ($tr) {
            //simulate click on edit button.
            $tr.find("button.edit_btn").click();
        }
    }
    var autoCompleteEditor = function (ui) {
        var $inp = ui.$cell.find("input");
        var rowData = ui.rowData;
      
        //initialize the editor
        $inp.autocomplete({
        	source: "/bp/vendor-search/auto-complete",
            minLength: 3,
            select: function( event, ui ) {
          	  //$( "#vendor_id" ).val(ui.item.id);
              //alert	( "Selected: " + ui.item.value + " aka " + ui.item.id );
          	  //alert($( "#vendor_id" ).val());
          	  //alert(ui.item.id);
          	  rowData.vendor_id = ui.item.id;

          	 	$('#global-notice').show();
          		$('#global-notice').html('"' + ui.item.value + '" selected');
          		$('#global-notice').fadeOut(5000);
          		//$("#jquery_dialog").dialog("close");
            }
            })
            .autocomplete( "instance" )._renderItem = function( ul, item ) {
            return $( "<li>" )
              .append( "<div style='padding-bottom: 5px; border-bottom: thin solid gray;'>" + item.value + "<br><span style='color:gray;font-size: 9pt;'>" + item.vendor_country + "<span></div>" )
              .appendTo( ul );
          };
    }
    

    //var container_height = $('#main_container').height();
    //alert(container_height);
	var obj = { width: "100%", height: $(window).height()-280, showTitle : false,
			resizable:true,
			//draggable:true,
			sortable: true,
			hoverMode: 'cell',
		   	pageModel: { type: "remote", rPP: 50, strRpp: "{0}" },
		  	editModel: {
                allowInvalid: true,
                saveKey: $.ui.keyCode.ENTER
            },
            editor: {
                select: true
            },
		 columnBorders: true,
    	   toolbar: {
                    items: [
                        { type: 'button', icon: 'ui-icon-plus', label: 'Add New Row', listeners: [
                            { "click": function (evt, ui) {
                                var $grid = $(this).closest('.pq-grid');
                                //addRow($grid);
                                
   		     redirectUrl="/procure/pr-row/add?token=<?php echo (!$entity == null)? $entity->getToken():"";?>&target_id=<?php echo (!$entity == null)? $entity->getId():"";?>&checksum=<?php echo (!$entity == null)? $entity->getChecksum():"";?>";
              window.location.href= redirectUrl;
                                 
                                //debugger;
                            }
                            }
                        ]
                        }
                    ]
                },


        change: function (evt, ui) {                
            
            if (ui.source == 'commit' || ui.source == 'rollback') {
                return;
            }
            console.log(ui);
            var $grid = $(this),
                grid = $grid.pqGrid('getInstance').grid;
            var rowList = ui.rowList,
                addList = [],
                recIndx = grid.option('dataModel').recIndx,
                deleteList = [],
                updateList = [];
            
            for (var i = 0; i < rowList.length; i++) {
                var obj = rowList[i],
                    rowIndx = obj.rowIndx,
                    newRow = obj.newRow,
                    type = obj.type,
                    rowData = obj.rowData;
                 if (type == 'add') {                        
                    var valid = grid.isValid({ rowData: newRow, allowInvalid: true }).valid;
                    if (valid) {
                        addList.push(newRow);
                    }
                }
                else if (type == 'update') {                        
                    var valid = grid.isValid({ rowData: rowData, allowInvalid: true }).valid;
                    if (valid) {
                        if (rowData[recIndx] == null) {
                            addList.push(rowData);
                        }
                        //else if (grid.isDirty({rowData: rowData})) {
                        else {
                            updateList.push(rowData);
                      		//alert(rowData[recIndx]  + "remarks: " + rowData.item_name);
                             
                        }
                    }
                }
              }

              if (addList.length || updateList.length || deleteList.length) {
				var sent_list = JSON.stringify({
                    updateList: updateList,
                    addList: addList,
                    deleteList: deleteList
                });
                //alert(sent_list);
                  
                  $.ajax({
                      url: '/procure/pr-row/update-row',
                      data: {
                          sent_list: sent_list
                      },
                      dataType: "json",
                      type: "POST",
                      async: true,
                      beforeSend: function (jqXHR, settings) {
                          //$(".saving", $grid).show();

						  	
                          //$("#global-notice").text("Updating...").show();
                          //alert(updateList[0].item_name  +  updateList[0].row_id);
                      },
                      success: function (changes) {
                          //commit the changes.
                          //alert(changes.updateList);
                           $("#global-notice").text("Updated...").show();
            		      //alert('it is ok');                
                          /* grid.commit({ type: 'add', rows: changes.addList });
                          grid.commit({ type: 'update', rows: changes.updateList });
                          grid.commit({ type: 'delete', rows: changes.deleteList }); */
                      },
                      complete: function () {
                          //$(".saving", $grid).hide();
                          $("#global-notice").delay(2200).fadeOut(500);
                          
                      }
                  });
              }
            //alert(updateList.length);
           
        },     
	              
	};

    obj.colModel = [
    	/*  { title: "vendor", dataType: "string", dataIndx: "vendor", align: 'left',minWidth: 100,editable: true,
             editor: {
             type: "textbox",
             init: autoCompleteEditor
             //type: function (ui) { return dropdowneditor(this, ui); }
         },},
         
       { title: "Vendor_id", dataType: "integer", dataIndx: "vendor_id", width: 7	,editable: true,hidden: true }, */
        { title: "FA Remarks", dataType: "string", dataIndx: "fa_remarks", align: 'left',minWidth: 150,editable: true},
        { title: "Identifer", dataType: "string", dataIndx: "row_identifer",width: 85,align: 'left',editable: false},	
        { title: "#", dataType: "integer", dataIndx: "row_number", width:5,editable: true },
   		{ title: "SKU", dataType: "string", dataIndx: "item_sku", width:50,editable: false },
        { title: "Item", dataType: "string", dataIndx: "item_name", width:250,editable: false },
        { title: "Quantity", dataType: "integer", dataIndx: "quantity", width: 70,align: 'right',editable: false},
        { title: "Received", dataType: "string", dataIndx: "total_received", width:70, align: 'right',editable: false},
        { title: "Balance", dataType: "integer", dataIndx: "confirmed_balance", width: 70,align: 'right',editable: false},
        { title: "buying", dataType: "integer", dataIndx: "buying", width: 70,align: 'right',editable: false},
        { title: "Project", dataType: "string", dataIndx: "project_id", width: 70, align: 'right',editable: false},
        { title: "Vendor", dataType: "string", dataIndx: "vendor_name", width: 90, align: 'left',editable: false},
        { title: "Price", dataType: "float", dataIndx: "vendor_unit_price", width: 82, align: 'right',editable: false},
        { title: "Curr", dataType: "string", dataIndx: "currency", width:3, align: 'center',editable: false},
             
        { title: "Remarks", dataType: "string", dataIndx: "remarks", align: 'left',minWidth: 150,editable: false},
        
        { title: "", editable: false, minWidth: 200, sortable: false,
            render: function (ui) {
                return "<button type='button' class='edit_btn' ><small><i style='font-style: normal;' class=''>Edit&nbsp;</i></small></button><button type='button' class='receive_btn'><span class='glyphicon glyphicon-plus'>&nbsp;</span><button type='button' class='receive_inline_btn'><span class='glyphicon glyphicon-plus'>&nbsp;</span></button>";
	           }
        },
   ];

    obj.dataModel = {	
    		  dataType: "JSON",
              location: "remote",
              method: "GET",
              recIndx: "row_id",
              url: "/procure/pr-row/gird1?token=<?php echo (!$entity == null)? $entity->getToken():"";?>&target_id=<?php echo (!$entity == null)? $entity->getId():"";?>&checksum=<?php echo (!$entity == null)? $entity->getChecksum():"";?>",
              getData: function (response) {
           	    return { data: response.data, curPage: response.curPage, totalRecords: response.totalRecords};
             }
    };
    
    var $grid = $("#pr_row_gird").pqGrid(obj);

    $grid.on('pqgridrefresh pqgridrefreshrow', function () {
        //debugger;
        var $grid = $(this);

        //receive button
        $grid.find("button.receive_btn").button({})
        .unbind("click")
        .bind("click", function (evt) {

            var $tr = $(this).closest("tr"),
            rowIndx = $grid.pqGrid("getRowIndx", { $tr: $tr }).rowIndx;

            rowData = $grid.pqGrid("getRowData", { rowIndx: rowIndx }),
            recIndx = $grid.pqGrid("option", "dataModel.recIndx");
    
            redirectUrl="/inventory/item-transaction/gr?token="+rowData['row_token']+"&pr_row_id="+rowData['row_id']+"&checksum="+rowData['row_checksum'];
          	//alert(rowData['item_name']);
			
			window.location.href = redirectUrl;
          	//window.open(redirectUrl,'_blank');
        });

        //receive button
        $grid.find("button.edit_btn").button({})
        .unbind("click")
        .bind("click", function (evt) {

            var $tr = $(this).closest("tr"),
            rowIndx = $grid.pqGrid("getRowIndx", { $tr: $tr }).rowIndx;

            rowData = $grid.pqGrid("getRowData", { rowIndx: rowIndx }),
            recIndx = $grid.pqGrid("option", "dataModel.recIndx");
    
            redirectUrl="/procure/pr-row/edit?token="+rowData['row_token']+"&entity_id="+rowData['row_id']+"&checksum="+rowData['row_checksum'];
          	//alert(redirectUrl);
			window.location.href = redirectUrl;
          	//window.open(redirectUrl,'_blank');
        });

        //receive button
        $grid.find("button.receive_inline_btn").button({})
        .unbind("click")
        .bind("click", function (evt) {
            if (isEditing($grid)) {
                return false;
            }
            var $tr = $(this).closest("tr"),
                rowIndx = $grid.pqGrid("getRowIndx", { $tr: $tr }).rowIndx;
            editRow(rowIndx, $grid);
            return false;
        });

      //receive button
        $grid.find("button.receive_inline_btn").button({})
        .unbind("click")
        .bind("click", function (evt) {

            var $tr = $(this).closest("tr"),
            rowIndx = $grid.pqGrid("getRowIndx", { $tr: $tr }).rowIndx;

            rowData = $grid.pqGrid("getRowData", { rowIndx: rowIndx }),
            recIndx = $grid.pqGrid("option", "dataModel.recIndx");
    
            redirectUrl="/inventory/item-transaction/gr1?token="+rowData['row_token']+"&pr_row_id="+rowData['row_id']+"&checksum="+rowData['row_checksum'];
          	//alert(rowData['item_name']);
          	
          	//showBootstrapDialog('Select Deparment',redirectUrl,'b_loaded_data');
          	showJqueryDialog('Item Receiving','1000',$(window).height()-100, redirectUrl,'j_loaded_data', true);
          	//window.open(redirectUrl,'_blank');
          	
        });

      //rows which were in edit mode before refresh, put them in edit mode again.
        var rows = $grid.pqGrid("getRowsByClass", { cls: 'pq-row-edit' });
        if (rows.length > 0) {
            var rowIndx = rows[0].rowIndx;
            editRow(rowIndx, $grid);
        }
    });        

   function refreshGird(){
    	$( "#pr_row_gird" ).pqGrid( "refreshDataAndView" )
	} 
</script>

